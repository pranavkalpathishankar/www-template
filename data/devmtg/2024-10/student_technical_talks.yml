student_technical_talks:
  - title: "Half-precision in LLVM libc"
    speaker: "Nicolas Celik"
    video_url: "https://youtu.be/H6aOFSVwSSM"
    slides_url: "https://llvm.org/devmtg/2024-10/slides/studenttalks/Celik-Half-precision-in-LLVM-libc.pdf"
    description: |
      C23 defines new floating-point types, such as _Float16, which corresponds to the IEEE 754
      standard's binary16 interchange format, also known as half-precision floating-point or
      FP16. C23 also defines variants of the C standard library's math functions for these new
      types. This talk will present the implementation of _Float16 math functions in LLVM libc,
      their performance, and the challenges encountered while implementing them.

  - title: "DynamicAPInt: Infinite-Precision Arithmetic for LLVM"
    speaker: "Arjun Pitchanathan"
    video_url: "https://youtu.be/eFMTHtS3y1U"
    slides_url: "https://llvm.org/devmtg/2024-10/slides/studenttalks/Pitchanathan-DynamicAPInt-Infinite-PrecisionArithmetic-for-LLVM.pdf"
    description: |
      We announce a new class, DynamicAPInt, that can perform infinite-precision integer
      arithmetic. Unlike APInt, the user does not have to specify a particular maximum size. We
      also provide a more friendly user interface with overloaded operators. Finally, the class
      implements a small-value optimization making it significantly faster than APInt when
      operating on small values. In particular, we see a 2.8x speedup on an addition
      microbenchmark where the values always stay small. We describe the performance
      optimizations that we applied to achieve this level of performance.

  - title: "FPOpt: Balancing Cost and Accuracy of Floating-Point Computations in LLVM IR"
    speaker: "Siyuan Brant Qian"
    video_url: "https://youtu.be/b0COW_6v4m0"
    slides_url: "https://llvm.org/devmtg/2024-10/slides/studenttalks/Qian-FPOpt.pdf"
    description: |
      This talk introduces FPOpt, an optimization pass integrated into the LLVM-based
      Enzyme automatic differentiation framework, which automatically discovers improvements for
      floating-point programs using Herbie and tries to maximize overall accuracy of programs
      subject to a customizable computation cost budget. To make optimization decisions that
      respect realistic program behaviors, FPOpt leverages numeric profile data generated by a
      specialized logging functionality in Enzyme.

  - title: "A data-driven approach to debug info quality"
    speaker: "Emil Pedersen"
    video_url: "https://youtu.be/zluvVkxK6oY"
    slides_url: "https://llvm.org/devmtg/2024-10/slides/studenttalks/Pedersen-DataDrivenApproachToDebugInfoQuality.pdf"
    description: |
      Debugging optimized code is frustrating: often, variables are missing. But some of
      these variables could be salvaged. In this talk, we will present a new analysis that
      detects when variables are lost in the compiler. This has two advantages: It allows to
      focus work on fixing optimizer passes that lose the most debug variables, and, by running
      it on real-world code, it also makes it easy to find concrete test cases where variable
      debug info is lost. We will use the work done on passes in the Swift frontend as an
      example, where we were able to increase the number of variables available in LLDB using
      this approach.

  - title: "GISel for Scalable Vectors: Expanding the Horizon"
    speaker: "Jiahan Xie"
    video_url: "https://youtu.be/nOcMt7JdIkg"
    slides_url: "https://llvm.org/devmtg/2024-10/slides/studenttalks/Xie-GISel.pdf"
    description: |
      Discover the groundbreaking implementation of GISel for scalable vectors, targeting
      the RISC-V vector extension. This talk delves into the challenges and solutions of
      supporting scalable vector ALU and load/store instructions, offering insights and best
      practices for LLVM developers working on GISel for other targets.

  - title: "The syntax dialect: creating a parser generator with MLIR"
    speaker: "Fabian Mora-Cordero"
    video_url: "https://youtu.be/b9jprrQjmq4"
    slides_url: "https://llvm.org/devmtg/2024-10/slides/studenttalks/Cordero-The-syntax-dialect.pdf"
    description: |
      This talk presents the syntax dialect, an MLIR dialect for formal language analysis
      and parser generation, and its associated tools. The syntax dialect is an MLIR dialect
      that can represent regular and context-free languages and parsing expression grammars
      (PEG). We found that using MLIR simplified the introduction of complex concepts like
      macros over formal languages, as we can reuse passes like function inlining to handle
      their intricacies. Finally, we discuss future work of creating lowerings to other MLIR
      dialects to be able to dynamically create and JIT lexers and parsers by using the MLIR
      execution engine.